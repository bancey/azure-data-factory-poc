{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "abance-adf-poc"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Process CSV Import')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Insert Into CE",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "processAccounts",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "accounts*.csv"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "CommonDataServiceForAppsSink",
								"writeBatchSize": 10,
								"writeBehavior": "upsert",
								"ignoreNullValues": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Account Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Street 1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "address1_line1",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "City",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "address1_city",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Post Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "address1_postalcode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Country",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "address1_country",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Ownership",
											"type": "Int32",
											"physicalType": "String"
										},
										"sink": {
											"name": "ownershipcode",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "accountid",
											"type": "Guid",
											"physicalType": "String"
										},
										"sink": {
											"name": "accountid",
											"type": "Guid"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "transformedAccounts",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "CDS_Account",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "AccountNames",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Insert Into CE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "names*.csv"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "accountNames",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each Account Name",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "AccountNames",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('AccountNames').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Set local1 to fetchFilter",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "local1",
										"value": {
											"value": "@variables('fetchFilter')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set fetchFilter",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set local1 to fetchFilter",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "fetchFilter",
										"value": {
											"value": "@concat(variables('local1'), '<value>', item().AccountName, '</value>')",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Get Account GUIDs",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "For Each Account Name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "CommonDataServiceForAppsSource",
								"query": {
									"value": "@concat('<fetch><entity name=\"account\"><attribute name=\"accountid\"/><attribute name=\"name\"/><filter type=\"and\"><condition attribute=\"name\" operator=\"in\">', variables('fetchFilter'), '</condition></filter></entity></fetch>')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CDS_Account",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "accountsNamesAndGuids",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "processContacts",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Get Account GUIDs",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "processContacts",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					},
					{
						"name": "processAccounts",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "processAccounts",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					},
					{
						"name": "Insert Contacts Into CE",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "processContacts",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "CommonDataServiceForAppsSink",
								"writeBatchSize": 10,
								"writeBehavior": "upsert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "accountid",
											"type": "Guid",
											"physicalType": "String"
										},
										"sink": {
											"name": "parentcustomerid",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "accountentitytype",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "parentcustomerid@EntityReference"
										}
									},
									{
										"source": {
											"name": "Account",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "parentcustomeridname",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "contactid",
											"type": "Guid",
											"physicalType": "String"
										},
										"sink": {
											"name": "contactid",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "First Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "firstname",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Last Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "lastname",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Email",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "emailaddress1",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Contact Method",
											"type": "Int32",
											"physicalType": "String"
										},
										"sink": {
											"name": "preferredcontactmethodcode",
											"type": "Int32"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "transformedContacts",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "CDS_Contact",
								"type": "DatasetReference"
							}
						]
					}
				],
				"variables": {
					"local1": {
						"type": "String"
					},
					"fetchFilter": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2020-10-01T11:05:25Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/transformedAccounts')]",
				"[concat(variables('factoryId'), '/dataflows/processAccounts')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Accounts')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "importsrc",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Accounts",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "accounts_contacts.xlsx",
						"container": "src"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Account Name",
						"type": "String"
					},
					{
						"name": "Street 1",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "Post Code",
						"type": "String"
					},
					{
						"name": "Country",
						"type": "String"
					},
					{
						"name": "Ownership",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/transformedAccounts')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "importsrc",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "accounts.csv",
						"container": "transformed"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Account Name",
						"type": "String"
					},
					{
						"name": "Street 1",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "Post Code",
						"type": "String"
					},
					{
						"name": "Country",
						"type": "String"
					},
					{
						"name": "Ownership",
						"type": "String"
					},
					{
						"name": "accountid",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/processAccounts')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Accounts",
								"type": "DatasetReference"
							},
							"name": "accounts"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "transformedCSV",
								"type": "DatasetReference"
							},
							"name": "transformedAccountsOutput"
						},
						{
							"dataset": {
								"referenceName": "accountNames",
								"type": "DatasetReference"
							},
							"name": "accountNames"
						}
					],
					"transformations": [
						{
							"name": "ConvertAccountOptionSets"
						},
						{
							"name": "selectAccountName"
						}
					],
					"script": "source(output(\n\t\t{Account Name} as string,\n\t\t{Street 1} as string,\n\t\tCity as string,\n\t\t{Post Code} as string,\n\t\tCountry as string,\n\t\tOwnership as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> accounts\naccounts derive(Ownership = case(equalsIgnoreCase(Ownership, 'Public'), 1, \r\n    case(equalsIgnoreCase(Ownership, 'Private'), 2, \r\n        case(equalsIgnoreCase(Ownership, 'Subsidiary'), 3, \r\n            case(equalsIgnoreCase(Ownership, 'Other'), 4, toInteger(null()))\r\n            )\r\n        )\r\n    ),\n\t\taccountid = toString(null())) ~> ConvertAccountOptionSets\naccounts select(mapColumn(\n\t\tAccountName = {Account Name}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> selectAccountName\nConvertAccountOptionSets sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['accounts.csv'],\n\ttruncate: true,\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> transformedAccountsOutput\nselectAccountName sink(input(\n\t\tAccountName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tfilePattern:'names.csv',\n\ttruncate: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> accountNames"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Accounts')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/triggerOnUpload')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Process CSV Import",
							"type": "PipelineReference"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/src/blobs/",
					"blobPathEndsWith": "accounts_contacts.xlsx",
					"ignoreEmptyBlobs": true,
					"scope": "/subscriptions/9ff4c4e6-1921-4e8f-a68c-be2353ce09f7/resourceGroups/adf-test/providers/Microsoft.Storage/storageAccounts/importsrc",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Process CSV Import')]"
			]
		}
	]
}